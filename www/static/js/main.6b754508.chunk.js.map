{"version":3,"sources":["logo.svg","components/Tracklist.js","App.js","serviceWorker.js","reducers/testReducer.js","reducers/trackReducer.js","reducers/index.js","index.js"],"names":["module","exports","makeStyles","theme","root","overflow","width","height","maxWidth","backgroundColor","palette","background","paper","Tracklist","generator_poly","galois_field_table","replace","split","characters_to_hex","input","charCodeAt","toString","hex_to_binary","byte","binary","parseInt","slice","length","binary_to_number","longDivision","message_poly","init_length","i","first_term","alpha_power","indexOf","generator_poly_copy","map","term","term_split","term_alpha","Number","integer_term","j","generator_term","message_term","console","log","shift","item","finder_pattern","alignment_pattern","blacklist","is_not_overlapping","x","y","binary_poly_division","divide","Array","join","assert","App","useHistory","useDispatch","useState","roomcode","setRoomcode","encodedBinary","setEncodedBinary","canvasRef","React","useRef","dataBits","setDataBits","draw_modules_at","SIZE","context","modules","forEach","subarray","fillRect","push","useEffect","current","getContext","clearRect","beginPath","upper_left","upper_left_transpose","col","upper_right","lower_left","version_area","version_area_transpose","_","index","row","right","size","vert","bit","format_string","combined_format","final_format_string","upper_left_format","reverse","bottom_left_format","upper_right_format","version_information","version_information_array","filter","t_version_information_array","encoded","Spotify","window","cordova","plugins","SpotifyPlugin","integer_chunks","match","chunk","message_polynomial","integer","generator_poly_new","group_one","splice","group_two","test_polynomial","EC_codewords","interleaved","interleaved_ec","complete_message","number_to_binary","localStorage","setItem","Button","variant","color","onClick","login","res","char","converted_string","String","fromCharCode","hex_to_character","QRScanner","show","scan","err","text","alert","TextField","id","label","onChange","event","currentTarget","value","location","hostname","assign","querystring","stringify","code","style","display","marginLeft","marginRight","position","left","top","marginTop","ref","Boolean","testReducer","state","action","type","trackReducer","payload","allReducers","combineReducers","tracks","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","startApp","ReactDOM","render","StrictMode","document","getElementById","addEventListener","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b754508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { useSelector, useDi } from \"react-redux\";\r\nimport DynamicList, { createCache } from \"react-window-dynamic-list\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { Paper, TextareaAutosize, Avatar } from \"@material-ui/core\";\r\nimport { handleAddQueue } from \"../network/helper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    overflow: \"auto\",\r\n    width: \"100%\",\r\n    height: 400,\r\n    maxWidth: 300,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction generateListElement(track, index) {\r\n  return (\r\n    <ListItem button key={index} onClick={() => handleAddQueue(track[\"uri\"])}>\r\n      <ListItemAvatar>\r\n        <Avatar src={`${track[\"image\"][\"url\"]}`} />\r\n      </ListItemAvatar>\r\n      <ListItemText primary={`${track[\"name\"]}`} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nfunction Tracklist() {\r\n  const tracks = useSelector(state => state.tracks);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.style}>\r\n      {tracks.length > 0 ? (\r\n        <Paper className={classes.root}>\r\n          <List>\r\n            {tracks.map((track, index) => generateListElement(track, index))}\r\n          </List>\r\n        </Paper>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracklist;\r\n","/**\r\n * Important: I made custom changes to the Spotify plugin; added functionality to make it work better\r\n */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTrack } from \"./actions\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { useModal } from \"react-modal-hook\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { handleAddQueue, handleSearch } from \"./network/helper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tracklist from \"./components/Tracklist\";\r\nimport querystring from \"querystring\";\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize?\";\r\n//const keys = require(\"../../data.json\");\r\nvar client_id = \"d5a94039038d4a12b5816fd9bf1e6af5\"; // Your client id\r\n//var client_secret = keys[\"secret_key\"]; // Your secret\r\nvar redirect_uri = \"com.example.cordovaspotifyapp\";\r\n/// HELLO WORLD EXAMPLE QR CODE CONSTANTS\r\nconst H_encoded_string =\r\n  \"00100000 01011011 00001011 01111000 11010001 01110010 11011100 01001101 01000011 01000000 11101100 00010001 11101100\";\r\n\r\n///\r\n\r\nconst mode_length = \"01000000000011111010\"; // This contains the mode bits (first 4 bits, followed by 16 bits determining the length)\r\nconst terminator_bits = \"0000\"; //these are required for QR codes incase the length is not exact.\r\n// Filler bits.\r\nconst subsequent_bits = `11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100`;\r\n\r\nvar generator_poly =\r\n  \"0x291 + 215x290 + 234x289 + 158x288 + 94x287 + 184x286 + 97x285 + 118x284 + 170x283 + 79x282 + 187x281 + 152x280 + 148x279 + 252x278 + 179x277 + 5x276 + 98x275 + 96x274 + 153x273\";\r\n\r\n//This is the log antilog table for the galois field(256), each INDEX represents the power-value of alpha (=2). e.g 29 = alpha^8 (i.e index 8)\r\nconst galois_field_table = `1\t2\t4\t8\t16\t32\t64\t128\t29\t58\t116\t232\t205\t135\t19\t38\t76\t152\t45\t90\t180\t117\t234\t201\t143\t3\t6\t12\t24\t48\t96\t192\t157\t39\t78\t156\t37\t74\t148\t53\r\n                        106\t212\t181\t119\t238\t193\t159\t35\t70\t140\t5\t10\t20\t40\t80\t160\t93\t186\t105\t210\t185\t111\t222\t161\t95\t190\t97\t194\t153\t47\t94\t188\t101\t202\t137\t15\t30\r\n                        60\t120\t240\t253\t231\t211\t187\t107\t214 177\t127\t254\t225\t223\t163\t91\t182\t113\t226\t217\t175\t67\t134\t17\t34\t68\t136\t13\t26\t52\t104\t208\t189\t103\t206\t129\r\n                        31\t62\t124\t248\t237\t199\t147\t59\t118\t236\t197\t151\t51\t102\t204\t133\t23\t46\t92\t184\t109\t218\t169\t79\t158\t33\t66\t132\t21\t42\t84\t168\t77\t154\t41\t82\r\n                        164\t85\t170\t73\t146\t57\t114\t228\t213\t183\t115\t230\t209\t191\t99\t198\t145\t63\t126\t252\t229\t215\t179\t123\t246\t241\t255\t227\t219\t171\t75\t150\t49\t98\t196\t149\r\n                        55\t110\t220\t165\t87\t174\t65\t130\t25\t50\t100\t200\t141\t7\t14\t28\t56\t112\t224\t221\t167\t83\t166\t81\t162\t89\t178\t121\t242\t249\t239\t195\t155\t43\t86\t172\t69\r\n                        138\t9\t18\t36\t72\t144\t61\t122\t244\t245\t247\t243\t251\t235\t203\t139\t11\t22\t44\t88\t176\t125\t250\t233\t207\t131\t27\t54\t108\t216\t173\t71\t142`\r\n  .replace(/\\s+/g, \" \")\r\n  .split(\" \");\r\n\r\n/*\r\n\r\nhex = \"H\".charCodeAt(0).toString(16); // convert character to hex (without 0x)\r\nbinary = parseInt(hex, 16).toString(2) // converts hex to binary\r\neight_bit = eight_bit.slice(0, 8 - binary.length) // Append 0s if necessary to make 8 bits.\r\neight_bit += binary\r\nbtoh = parseInt(eight_bit, 2).toString(16) // converts binary to hex\r\ncharacter = String.fromCharCode(0x48) // convert hex to character MUST USE 0x\r\n\r\nConvert binary to hex\r\n*/\r\n\r\n/**\r\n * Takes 1 character and outputs it's hex value (without 0x)\r\n * @param {string} input\r\n */\r\nfunction characters_to_hex(input) {\r\n  return input.charCodeAt(0).toString(16);\r\n}\r\n/**\r\n * Takes a hex value (integer part) and converts into 1 byte\r\n * @param {string} input\r\n */\r\nfunction hex_to_binary(input) {\r\n  var byte = \"00000000\";\r\n  var binary = parseInt(input, 16).toString(2);\r\n  byte = byte.slice(0, 8 - binary.length);\r\n  byte += binary;\r\n  return byte;\r\n}\r\n\r\n/**\r\n * Takes a string that's a byte\r\n * @param {string} input\r\n */\r\nfunction binary_to_hex(input) {\r\n  return parseInt(input, 2).toString(16);\r\n}\r\n\r\n/**\r\n * Takes a string of hex (without 0x) and converts into character\r\n * as per the ISO standard\r\n * @param {string} input\r\n */\r\nfunction hex_to_character(input) {\r\n  return String.fromCharCode(\"0x\" + input);\r\n}\r\n\r\nfunction number_to_binary(input) {\r\n  var byte = \"00000000\";\r\n  var binary = parseInt(input, 10).toString(2);\r\n  byte = byte.slice(0, 8 - binary.length);\r\n  byte += binary;\r\n  return byte;\r\n}\r\n\r\nfunction binary_to_number(input) {\r\n  return parseInt(input, 2);\r\n}\r\n\r\nfunction comeplete_qr_code(encoded) {\r\n  // this takes all bits rearrenges them into a complete QR code order and returns them into equal chunks of 8 bits long\r\n  let all_bits = `${mode_length}${encoded}${terminator_bits}${subsequent_bits}`;\r\n  return all_bits.replace(/\\s+/g, \"\").match(/.{1,8}/g); //returns array of 8 bit chunks (strings)\r\n  //.join(\" \");\r\n}\r\n\r\nfunction longDivision(message_poly, generator_poly) {\r\n  var init_length = message_poly.length;\r\n  for (let i = 0; i < init_length; i++) {\r\n    let first_term = message_poly[0].split(\"x\");\r\n    var alpha_power = galois_field_table.indexOf(first_term[0]);\r\n    // multiplies the lead term of the message poly by the generator poly and, simultanouelsy converting the entire generator poly to integer\r\n    var generator_poly_copy = generator_poly.map(term => {\r\n      var term_split = term.split(\"x\");\r\n      var term_alpha = Number(term_split[0]);\r\n      var added_term = alpha_power + term_alpha >= 255 ? (alpha_power + term_alpha) % 255 : alpha_power + term_alpha;\r\n      var integer_term = galois_field_table[added_term];\r\n      return `${integer_term}x${term_split[1]}`;\r\n    });\r\n\r\n    //XOR the generator_poly (now with integer notation) with the message polynomial. XOR by 0 with those \"outside\" the range of the generator_poly\r\n    for (let j = 0; j < generator_poly_copy.length; j++) {\r\n      let generator_term = generator_poly_copy[j].split(\"x\")[0];\r\n      let message_term = message_poly[j] ? message_poly[j].split(\"x\") : [0, 0];\r\n      message_poly[j] = `${Number(message_term[0]) ^ Number(generator_term)}x${message_term[1]}`;\r\n    }\r\n\r\n    console.log(message_poly);\r\n\r\n    //discard ALL 0 terms which are at the beginning\r\n    while (Number(message_poly[0].split(\"x\")[0]) === 0) {\r\n      message_poly.shift();\r\n      i++;\r\n    } // this counts as extra step if there are more than one 0s in the beginning.\r\n    i--;\r\n  }\r\n\r\n  //console.log(message_poly); //Final 18 EC-codewords\r\n  return message_poly.map(item => item.split(\"x\")[0]);\r\n}\r\n\r\nconst finder_pattern = [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 1, 1, 1, 1, 1, 1, 1, 0],\r\n  [0, 1, 0, 0, 0, 0, 0, 1, 0],\r\n  [0, 1, 0, 1, 1, 1, 0, 1, 0],\r\n  [0, 1, 0, 1, 1, 1, 0, 1, 0],\r\n  [0, 1, 0, 1, 1, 1, 0, 1, 0],\r\n  [0, 1, 0, 0, 0, 0, 0, 1, 0],\r\n  [0, 1, 1, 1, 1, 1, 1, 1, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n];\r\n\r\nconst alignment_pattern = [[1, 1, 1, 1, 1], [1, 0, 0, 0, 1], [1, 0, 1, 0, 1], [1, 0, 0, 0, 1], [1, 1, 1, 1, 1]];\r\n\r\n//It's here and not as a state because a state would trigger new updates constantly, we don't want that. We just want a temp storage for the module placement!\r\n/**\r\n * Finds an overlapping pixel by looking if\r\n * the ith module exists in the blacklist.\r\n * @param {integer} x\r\n * @param {integer} y\r\n */\r\nvar blacklist = [];\r\n\r\nconst is_not_overlapping = (x, y) => {\r\n  //if (y < 0 || y > 20) return false;\r\n  return blacklist.indexOf(x + y * 57) === -1;\r\n};\r\n\r\nconst binary_poly_division = (input, divide) => {\r\n  var byte = Array(input.length).join(\"0\");\r\n  byte = byte.slice(0, input.length - divide.length);\r\n  divide += byte;\r\n  //assert the same size\r\n  console.assert(input.length === divide.length, [input.length, divide.length]);\r\n  var XOR = parseInt(binary_to_number(input) ^ binary_to_number(divide), 10).toString(2);\r\n\r\n  return XOR;\r\n};\r\n\r\nconst sleep = milliseconds => {\r\n  const date = Date.now();\r\n  let currentDate = null;\r\n  do {\r\n    currentDate = Date.now();\r\n  } while (currentDate - date < milliseconds);\r\n};\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [on, setOn] = useState(false);\r\n  const [searchValue, setSearch] = useState(\"\");\r\n  const [roomcode, setRoomcode] = useState(\"\");\r\n  const [encodedBinary, setEncodedBinary] = useState(\"\");\r\n  const [state, setState] = useState(null);\r\n  const canvasRef = React.useRef(null);\r\n  const [dataBits, setDataBits] = useState(\"\");\r\n\r\n  const draw_modules_at = (x, y, SIZE, context, modules) => {\r\n    modules.forEach((subarray, i) => {\r\n      subarray.forEach((module, j) => {\r\n        if (module === 1) context.fillRect(j * SIZE + x * SIZE, i * SIZE + y * SIZE, SIZE, SIZE);\r\n        // need special case for -1,\r\n        if ((x === -1 && j === 0) || (y === -1 && i === 0)) return; //skip\r\n        blacklist.push(j + x + (y + i) * 57);\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const SIZE = 4;\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    //reset canvas and blacklist\r\n    //context.fillRect = \"rgba(0,0,0,0)\";\r\n    //context.fillRect(canvasRef.left, canvasRef.top, canvasRef.width, canvasRef.height)\r\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    context.beginPath();\r\n    blacklist = [];\r\n\r\n    // Add the three initial finder patterns\r\n    draw_modules_at(-1, -1, SIZE, context, finder_pattern);\r\n\r\n    draw_modules_at((10 - 1) * 4 + 21 - 7 - 1, -1, SIZE, context, finder_pattern);\r\n    draw_modules_at(-1, (10 - 1) * 4 + 21 - 7 - 1, SIZE, context, finder_pattern);\r\n\r\n    // draw alignment_patterns, they need to be placed correctly, (from the middle point, do this tomorrow) (i.e minus 2 on both X and Y axis)\r\n    draw_modules_at(6 - 2, 28 - 2, SIZE, context, alignment_pattern); //(VERSION 10 alignment patterns)\r\n    draw_modules_at(28 - 2, 28 - 2, SIZE, context, alignment_pattern);\r\n    draw_modules_at(28 - 2, 6 - 2, SIZE, context, alignment_pattern);\r\n    draw_modules_at(28 - 2, 50 - 2, SIZE, context, alignment_pattern);\r\n    draw_modules_at(50 - 2, 50 - 2, SIZE, context, alignment_pattern);\r\n    draw_modules_at(50 - 2, 28 - 2, SIZE, context, alignment_pattern);\r\n\r\n    //add the timing patterns\r\n    var i;\r\n    for (i = 0; i < 50; i++) {\r\n      blacklist.push(6 + i + 6 * 57);\r\n      blacklist.push(6 + (6 + i) * 57);\r\n      if (i % 2 === 0) {\r\n        context.fillRect((6 + i) * SIZE, 6 * SIZE, SIZE, SIZE);\r\n        context.fillRect(6 * SIZE, (6 + i) * SIZE, SIZE, SIZE);\r\n      }\r\n    }\r\n    // add dark module\r\n    draw_modules_at(8, 4 * 10 + 9, SIZE, context, [[1]]);\r\n\r\n    //reserve format info areas (I could draw these first)\r\n    let upper_left = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    draw_modules_at(0, 8, SIZE, context, [upper_left]);\r\n    let upper_left_transpose = upper_left.map(col => [col]);\r\n    draw_modules_at(8, 0, SIZE, context, upper_left_transpose);\r\n    let upper_right = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    draw_modules_at((10 - 1) * 4 + 21 - 7 - 1, 8, SIZE, context, [upper_right]);\r\n    let lower_left = upper_right.map(col => [col]);\r\n    draw_modules_at(8, (10 - 1) * 4 + 21 - 7 - 1, SIZE, context, lower_left);\r\n\r\n    //reserve version area\r\n    let version_area = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]];\r\n    draw_modules_at(0, (10 - 1) * 4 + 21 - 7 - 1 - 3, SIZE, context, version_area);\r\n\r\n    let version_area_transpose = version_area[0].map((_, index) => version_area.map(row => row[index]));\r\n    draw_modules_at((10 - 1) * 4 + 21 - 7 - 1 - 3, 0, SIZE, context, version_area_transpose);\r\n\r\n    //add the databits (REFACTOR CODE LATER)\r\n    if (dataBits) {\r\n      // start drawing position is at 20,20, (probably do this as a class instead idk)\r\n\r\n      //console.log(dataBits);\r\n      var i = 0; //bit index\r\n      var size = 10 * 4 + 17; //v = 1,\r\n\r\n      for (var right = size - 1; right >= 1; right -= 2) {\r\n        if (right === 6) right = 5;\r\n        for (var vert = 0; vert < size; vert++) {\r\n          //vertical counter\r\n          for (var j = 0; j < 2; j++) {\r\n            var x = right - j; // actual X coordinate\r\n            var upward = ((right + 1) & 2) === 0; //bitwise AND\r\n            var y = upward ? size - 1 - vert : vert; // actual y coordinate\r\n            if (is_not_overlapping(x, y)) {\r\n              var bit = dataBits[i];\r\n              if ((x + y) % 2 === 0) bit = bit == 1 ? 0 : 1; //invert bit, mask pattern 0\r\n              draw_modules_at(x, y, SIZE, context, [[Number(bit)]]);\r\n              //sleep(5000);\r\n              //The bits are not 100% correct. So, must be wrong with the solomon reed algorithm? EC codewords must be wrong somewhere.\r\n              //We can investigate this. Because the wrong bits come towards the end (CONFIRM THIS) and that's where the Ec codewords go.\r\n              i++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Format string, we are using mask apttern 0\r\n    var five_bit_format = \"01000\";\r\n    var format_string = \"10000000000000\"; // L-level and mask pattern 0\r\n\r\n    while (format_string.length > 10) {\r\n      var gen_poly = \"10100110111\";\r\n      var format_string = binary_poly_division(format_string, gen_poly);\r\n    }\r\n    var combined_format = `${five_bit_format}${format_string}`;\r\n    var final_format_string = parseInt(\r\n      binary_to_number(combined_format) ^ binary_to_number(\"101010000010010\"),\r\n      10\r\n    ).toString(2);\r\n\r\n    // \t111011111000100\r\n    final_format_string = [...\"111011111000100\"].map(item => Number(item));\r\n    //Possible to draw over reversed bits\r\n    var upper_left_format = [\r\n      [...final_format_string.slice(0, 6)],\r\n      [...final_format_string.slice(6, 8)],\r\n      [...final_format_string.slice(9, 15)].reverse().map(col => [col]),\r\n      [...final_format_string.slice(8, 9)].reverse().map(col => [col])\r\n    ];\r\n    var bottom_left_format = [...final_format_string.slice(0, 7)].reverse().map(col => [col]);\r\n    var upper_right_format = [...final_format_string.slice(7, 15)];\r\n\r\n    // \"don't forget to JUMP over the 6th bit for the upper left\r\n    draw_modules_at(0, 8, SIZE, context, [upper_left_format[0]]);\r\n    draw_modules_at(7, 8, SIZE, context, [upper_left_format[1]]);\r\n    draw_modules_at(8, 0, SIZE, context, upper_left_format[2]);\r\n    draw_modules_at(8, 7, SIZE, context, upper_left_format[3]);\r\n    draw_modules_at((10 - 1) * 4 + 21 - 7 - 1, 8, SIZE, context, [upper_right_format]);\r\n    draw_modules_at(8, (10 - 1) * 4 + 21 - 7, SIZE, context, bottom_left_format);\r\n\r\n    // Fill in the 6 x 3 version information (from QR-code specification)\r\n    var version_information = [...\"001010010011010011\"].map(bit => Number(bit)).reverse();\r\n    var version_information_array = [\r\n      version_information.filter((_, index) => index % 3 === 0),\r\n      version_information.filter((_, index) => index % 3 === 1),\r\n      version_information.filter((_, index) => index % 3 === 2)\r\n    ];\r\n    draw_modules_at(0, (10 - 1) * 4 + 21 - 7 - 1 - 3, SIZE, context, version_information_array);\r\n    var t_version_information_array = version_information_array[0].map((_, index) =>\r\n      version_information_array.map(row => row[index])\r\n    );\r\n    //could do a \"draw queue\" instead of doing this everytime\r\n    draw_modules_at((10 - 1) * 4 + 21 - 7 - 1 - 3, 0, SIZE, context, t_version_information_array);\r\n  }, [canvasRef, dataBits]);\r\n\r\n  var Spotify = window.cordova.plugins.SpotifyPlugin;\r\n\r\n  if (encodedBinary && !dataBits) {\r\n    //This is done twice, which we don't want.\r\n    let qr_chunks = comeplete_qr_code(encodedBinary); // length is correct\r\n    //converts the byte chunks into integer, necessary for EC calculations (QR-related), these are the coefficients\r\n    let integer_chunks = qr_chunks.map(chunk => parseInt(chunk, 2));\r\n    let message_polynomial = integer_chunks.map(\r\n      (integer, index) => `${integer}x${integer_chunks.length - (1 + index) + 18}`\r\n    );\r\n    var generator_poly_new = generator_poly.replace(/\\s/g, \"\");\r\n    var generator_poly_new = generator_poly.split(\"+\");\r\n    //Bytes divided into bytes and groups as per the QR specification for 10-L\r\n    var group_one = [integer_chunks.splice(0, 68), integer_chunks.splice(0, 68)];\r\n    var group_two = [integer_chunks.splice(0, 69), integer_chunks.splice(0, 69)];\r\n    // the error correction codewords for each block (4 blocks, in order)\r\n\r\n    var test_polynomial = [\r\n      69,\r\n      55,\r\n      118,\r\n      244,\r\n      214,\r\n      164,\r\n      245,\r\n      5,\r\n      4,\r\n      148,\r\n      67,\r\n      101,\r\n      22,\r\n      247,\r\n      66,\r\n      215,\r\n      36,\r\n      132,\r\n      198,\r\n      198,\r\n      212,\r\n      36,\r\n      228,\r\n      99,\r\n      117,\r\n      84,\r\n      68,\r\n      198,\r\n      230,\r\n      181,\r\n      118,\r\n      198,\r\n      163,\r\n      101,\r\n      149,\r\n      135,\r\n      149,\r\n      6,\r\n      147,\r\n      69,\r\n      37,\r\n      85,\r\n      148,\r\n      164,\r\n      164,\r\n      85,\r\n      119,\r\n      68,\r\n      245,\r\n      147,\r\n      147,\r\n      70,\r\n      50,\r\n      212,\r\n      22,\r\n      132,\r\n      99,\r\n      20,\r\n      198,\r\n      36,\r\n      133,\r\n      244,\r\n      117,\r\n      23,\r\n      22,\r\n      246,\r\n      180,\r\n      84,\r\n      100\r\n    ].map(item => `${item}x0`);\r\n    console.log(\"----\");\r\n    console.log(longDivision(test_polynomial, generator_poly_new)); // get this to work (figure out the bugs.)\r\n    console.log(\"----\");\r\n\r\n    var EC_codewords = [\r\n      longDivision(message_polynomial.splice(0, 68), generator_poly_new),\r\n      longDivision(message_polynomial.splice(0, 68), generator_poly_new),\r\n      longDivision(message_polynomial.splice(0, 69), generator_poly_new),\r\n      longDivision(message_polynomial.splice(0, 69), generator_poly_new)\r\n    ];\r\n\r\n    //Interleave the message blocks,\r\n    var interleaved = [];\r\n    var interleaved_ec = [];\r\n    while (group_two[0].length > 0) {\r\n      if (group_one[0].length > 0) {\r\n        interleaved.push(group_one[0].shift());\r\n        interleaved.push(group_one[1].shift());\r\n      }\r\n      interleaved.push(group_two[0].shift());\r\n      interleaved.push(group_two[1].shift());\r\n      //interleave EC blocks\r\n      if (EC_codewords[0].length > 0) {\r\n        // does it do it take element from the right end? Does it need to be reversed maybe?\r\n        interleaved_ec.push(EC_codewords[0].shift());\r\n        interleaved_ec.push(EC_codewords[1].shift());\r\n        interleaved_ec.push(EC_codewords[2].shift());\r\n        interleaved_ec.push(EC_codewords[3].shift());\r\n      }\r\n    }\r\n\r\n    // something is up with the interleaving ?\r\n\r\n    var combined_interleaved = [...interleaved, ...interleaved_ec].map(item => number_to_binary(item));\r\n    var complete_message = combined_interleaved.join(\"\");\r\n\r\n    console.log(complete_message.length);\r\n\r\n    //it is larger than 274 sinc we're adding the EC correction.\r\n    setDataBits(complete_message);\r\n  }\r\n  //console.log(comeplete_qr_code(encodedBinary));\r\n  var access_token = \"\";\r\n  // add token to local storage (might still use this)\r\n  localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          // below is for logging in\r\n          Spotify.login(client_id, redirect_uri, \"\", function(res) {\r\n            console.log(res);\r\n            setDataBits(\"\");\r\n            setEncodedBinary(\r\n              res\r\n                .split(\"\")\r\n                .map(char => {\r\n                  return [hex_to_binary(characters_to_hex(char))];\r\n                })\r\n                .join(\" \")\r\n            );\r\n            // convert back from binary and compare it against res\r\n            var binary_string = res\r\n              .split(\"\")\r\n              .map(char => {\r\n                return [hex_to_binary(characters_to_hex(char))];\r\n              })\r\n              .join(\" \");\r\n\r\n            var converted_string = binary_string\r\n              .split(\" \")\r\n              .map(byte => hex_to_character(binary_to_hex(byte)))\r\n              .join(\"\");\r\n            //console.log(converted_string);\r\n            //console.log(res);\r\n            console.assert(res === converted_string, [\"FAILED STRING COMPARISON\"]);\r\n          });\r\n        }}\r\n      >\r\n        Log in\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          window.QRScanner.show();\r\n          window.QRScanner.scan(displayContents);\r\n          function displayContents(err, text) {\r\n            if (err) {\r\n              console.log(err);\r\n            } else {\r\n              alert(text);\r\n            }\r\n          }\r\n          // This is when we want to retrieve token manually\r\n          //Spotify.getToken(\r\n          //  function(res) {\r\n          //    // This tests that the decoded binary value is correct debugging purposes\r\n          //    let temp = encodedBinary\r\n          //      .split(\" \")\r\n          //      .map(binary => {\r\n          //        return hex_to_character(binary_to_hex(binary));\r\n          //      })\r\n          //      .join(\"\");\r\n          //    console.log(res === temp);\r\n          //  },\r\n          //  function(error) {\r\n          //    alert(error);\r\n          //  }\r\n          //);\r\n        }}\r\n      >\r\n        Scan QR\r\n      </Button>\r\n      {access_token && (\r\n        <Button variant=\"contained\" color=\"blue\" onClick={() => handleAddQueue()}>\r\n          Add song\r\n        </Button>\r\n      )}\r\n      {access_token && (\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Search track...\"\r\n          onChange={event => setSearch(event.currentTarget.value)}\r\n        />\r\n      )}\r\n      {access_token && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"blue\"\r\n          onClick={() =>\r\n            handleSearch(searchValue).then(result => {\r\n              const { tracks } = JSON.parse(result);\r\n              tracks[\"items\"].map(item => {\r\n                const trackItem = {\r\n                  name: item[\"name\"], // track name\r\n                  artist: item[\"artists\"][0][\"name\"], // artist name\r\n                  uri: item[\"uri\"], // track URI\r\n                  image: item[\"album\"][\"images\"][0] // one image\r\n                };\r\n                dispatch(addTrack(trackItem));\r\n              });\r\n            })\r\n          }\r\n        >\r\n          Search\r\n        </Button>\r\n      )}\r\n      {access_token && <Tracklist />}\r\n      {!access_token && (\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Enter room code...\"\r\n          onChange={event => setRoomcode(event.currentTarget.value)}\r\n        />\r\n      )}\r\n      {!access_token && (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"blue\"\r\n          onClick={() => {\r\n            console.log(window.location.hostname);\r\n            window.location.assign(\r\n              \"http://\" +\r\n                window.location.hostname +\r\n                \":8888/join?\" +\r\n                querystring.stringify({\r\n                  code: roomcode\r\n                })\r\n            );\r\n          }}\r\n        >\r\n          Join Room\r\n        </Button>\r\n      )}\r\n      <h1>{\"Hello\"}</h1>\r\n      <div style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n        <canvas\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            marginLeft: \"-150px\",\r\n            marginTop: \"-100px\"\r\n          }}\r\n          ref={canvasRef}\r\n          width={400}\r\n          height={400}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const testReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default testReducer;\r\n","const trackReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TRACK\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default trackReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport testReducer from \"./testReducer\";\r\nimport trackReducer from \"./trackReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  testReducer,\r\n  tracks: trackReducer\r\n});\r\nexport default allReducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport allReducers from \"./reducers\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ModalProvider } from \"react-modal-hook\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nconst startApp = () => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ModalProvider>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </ModalProvider>\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nif (window.cordova) {\r\n  document.addEventListener(\"deviceready\", startApp, false);\r\n} else {\r\n  startApp();\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}